name: "godot-ci export"
on: 
  push:
    paths:
      - 'Version'

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: app
  PROJECT_PATH: .

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -p ~/.local/share/godot/export_templates/
          mkdir -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux/X11" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux

  export-web:
    name: Web Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Install deps
        run: |
          apt-get update && apt-get install -y rsync
          apt-get update && apt-get install -y openssh-client
          mkdir -p /root/.ssh
          ssh-keyscan github.com >> /root/.ssh/known_hosts
          echo "added github to hosts"
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          repository-name: almodn/game.github.io
          ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          branch: main
          folder: build/web
          git-config-name: 'game-builder[bot]'
          git-config-email: 'github-actions[bot]@users.noreply.github.com'
          commit-message: ${{ github.ref_name }}
          clean: true

  export-mac:
    name: Mac Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: |
          mkdir -p build/mac
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: build/mac

  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write
    needs: 
      - export-mac
      - export-web
      - export-linux
      - export-windows
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Read Version File
        id: version
        run: echo "VERSION=$(cat Version)" >> $GITHUB_ENV

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: build/windows

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: build/linux

      - name: Download Mac Artifact
        uses: actions/download-artifact@v4
        with:
          name: mac-build
          path: build/mac
      - name: Rename files
        run: |
          mv build/windows/app.exe build/Windows.exe
          mv build/linux/app.x86_64 build/Linux.x86_64
          mv build/mac/app.zip build/MacOS.zip
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          tag_name: ${{ env.VERSION }}
          files: |
            build/Windows.exe
            build/Linux.x86_64
            build/MacOS.zip
          body: "Web build: [Github Pages](https://TSAGodotGame25.github.io/game.github.io/)"
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
